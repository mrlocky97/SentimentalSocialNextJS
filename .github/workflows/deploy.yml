name: 🚀 Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ==================== BUILD & PUSH DOCKER IMAGE ====================
  build-image:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build and Push Docker Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📝 Output Image
        id: image
        run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

  # ==================== DEPLOY TO STAGING ====================
  deploy-staging:
    name: 🔄 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-image]
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging') ||
      (github.event_name == 'release' && github.event.release.prerelease == true)
    environment:
      name: ${{ github.event.inputs.environment || 'staging' }}
      url: https://staging.sentimentalsocial.app

    steps:
      - name: 🚀 Deploy to Staging
        run: |
          echo "🔄 Deploying to Staging Environment"
          echo "Image: ${{ needs.build-image.outputs.image }}"
          echo "Digest: ${{ needs.build-image.outputs.digest }}"
          # Add your actual deployment commands here
          # Example: kubectl set image deployment/app app=${{ needs.build-image.outputs.image }}@${{ needs.build-image.outputs.digest }}

      - name: 🧪 Smoke Tests
        run: |
          echo "🧪 Running smoke tests on staging..."
          # Add smoke tests here
          # curl -f https://staging.sentimentalsocial.app/health || exit 1

      - name: 📢 Notify Staging Deployment
        run: |
          echo "✅ Successfully deployed to staging!"
          echo "🔗 Staging URL: https://staging.sentimentalsocial.app"

  # ==================== DEPLOY TO PRODUCTION ====================
  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-image]
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production') ||
      (github.event_name == 'release' && github.event.release.prerelease == false)
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: https://sentimentalsocial.app

    steps:
      - name: 🌟 Deploy to Production
        run: |
          echo "🌟 Deploying to Production Environment"
          echo "Image: ${{ needs.build-image.outputs.image }}"
          echo "Digest: ${{ needs.build-image.outputs.digest }}"
          # Add your actual deployment commands here
          # Example: kubectl set image deployment/app app=${{ needs.build-image.outputs.image }}@${{ needs.build-image.outputs.digest }}

      - name: 🧪 Production Health Check
        run: |
          echo "🧪 Running production health checks..."
          # Add production health checks here
          # curl -f https://sentimentalsocial.app/health || exit 1

      - name: 📢 Notify Production Deployment
        run: |
          echo "🎉 Successfully deployed to production!"
          echo "🔗 Production URL: https://sentimentalsocial.app"

  # ==================== POST-DEPLOYMENT ====================
  post-deployment:
    name: 📊 Post-Deployment Tasks
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-production]
    if: always() && (needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')

    steps:
      - name: 📊 Update Deployment Status
        run: |
          echo "📊 Updating deployment metrics..."
          echo "Timestamp: $(date)"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Version: ${{ github.ref_name }}"

      - name: 📢 Send Notifications
        run: |
          echo "📢 Sending deployment notifications..."
          # Add notification logic here (Slack, Discord, email, etc.)
