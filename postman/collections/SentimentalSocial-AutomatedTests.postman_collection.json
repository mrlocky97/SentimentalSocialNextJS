{
  "info": {
    "_postman_id": "automated-tests-collection",
    "name": "SentimentalSocial - Automated Test Suite",
    "description": "Automated test suite for all SentimentalSocial API endpoints. Run this collection to test the complete API functionality.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Setup - Register Admin User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin user registration successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    if (jsonData.data && jsonData.data.user) {",
              "        pm.environment.set('userId', jsonData.data.user.id);",
              "        console.log('‚úÖ Admin user created with ID:', jsonData.data.user.id);",
              "        pm.expect(jsonData.data.user.role).to.eql('admin');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"admin_user\",\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\",\n  \"confirmPassword\": \"{{userPassword}}\",\n  \"displayName\": \"Admin User\",\n  \"role\": \"admin\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "auth", "register"]
        }
      }
    },
    {
      "name": "Setup - Login Admin User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin login successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    if (jsonData.data && jsonData.data.token) {",
              "        pm.environment.set('authToken', jsonData.data.token);",
              "        console.log('üîê Admin auth token saved');",
              "    }",
              "    if (jsonData.data && jsonData.data.refreshToken) {",
              "        pm.environment.set('refreshToken', jsonData.data.refreshToken);",
              "        console.log('üîÑ Refresh token saved');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"{{userPassword}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "auth", "login"]
        }
      }
    },
    {
      "name": "Test - Database Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Database health check successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data.status).to.eql('healthy');",
              "    console.log('üíö Database is healthy');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/admin/database/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "admin", "database", "health"]
        }
      }
    },
    {
      "name": "Test - Security Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Security status check successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.have.property('jwtSecurity');",
              "    console.log('üîí Security status retrieved');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/security/status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "security", "status"]
        }
      }
    },
    {
      "name": "Test - Sentiment Analysis",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Sentiment analysis successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.have.property('sentiment');",
              "    console.log('üéØ Sentiment analysis working:', jsonData.data.sentiment);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"text\": \"{{testSentimentText}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/sentiment/analyze-text",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "sentiment", "analyze-text"]
        }
      }
    },
    {
      "name": "Test - User Profile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('User profile retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.data).to.have.property('user');",
              "    console.log('üë§ User profile:', jsonData.data.user.email);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/users/profile",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "users", "profile"]
        }
      }
    },
    {
      "name": "Test - Create Campaign",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Campaign created successfully', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    if (jsonData.data && jsonData.data.campaign) {",
              "        pm.environment.set('campaignId', jsonData.data.campaign.id);",
              "        console.log('üìä Campaign created with ID:', jsonData.data.campaign.id);",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test Campaign - {{$timestamp}}\",\n  \"description\": \"Automated test campaign\",\n  \"keywords\": [\"test\", \"automation\"],\n  \"hashtags\": [\"{{testHashtag}}\"],\n  \"mentions\": [],\n  \"isActive\": true\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/campaigns",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "campaigns"]
        }
      }
    },
    {
      "name": "Test - Get Templates",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Templates retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    console.log('üìã Templates available:', jsonData.data ? jsonData.data.length : 0);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/templates",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "templates"]
        }
      }
    },
    {
      "name": "Test - Twitter Auth Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Twitter auth status retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    // We expect this to work even if not authenticated to Twitter",
              "    pm.expect(jsonData).to.have.property('success');",
              "    console.log('üê¶ Twitter auth status checked');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/twitter-auth/status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "twitter-auth", "status"]
        }
      }
    },
    {
      "name": "Test - Scraping Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Scraping status retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    console.log('üï∑Ô∏è Scraping status checked');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/scraping/status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "scraping", "status"]
        }
      }
    },
    {
      "name": "Test - Model Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Model status retrieved', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    console.log('üß† Sentiment model status checked');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/sentiment/model-status",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "sentiment", "model-status"]
        }
      }
    },
    {
      "name": "Cleanup - Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Logout successful', function () {",
              "    const jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.be.true;",
              "    console.log('üö™ User logged out successfully');",
              "    // Clear tokens",
              "    pm.environment.unset('authToken');",
              "    pm.environment.unset('refreshToken');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/{{apiVersion}}/auth/logout",
          "host": ["{{baseUrl}}"],
          "path": ["api", "{{apiVersion}}", "auth", "logout"]
        }
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": ["console.log('üß™ Running test:', pm.info.requestName);"]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for all requests",
          "if (pm.response.code !== 404) {",
          "    pm.test('Response time is acceptable', function () {",
          "        pm.expect(pm.response.responseTime).to.be.below(10000);",
          "    });",
          "}",
          "",
          "// Log the response status",
          "console.log('üìä Response status:', pm.response.code, pm.response.status);"
        ]
      }
    }
  ]
}
