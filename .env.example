# ========================================
# SENTIMENTALSOCIAL - ENVIRONMENT TEMPLATE  
# ========================================
# Copy this file to .env and configure for your environment

# Application Settings
NODE_ENV=development
PORT=3001
APP_URL=http://localhost:3001

# Database Configuration
MONGODB_URI=mongodb://localhost:27017/sentimentalsocial

# Authentication & Security (CHANGE THESE IN PRODUCTION!)
# Generate secure JWT secret: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
JWT_SECRET=d9Roeze9hzOf/bEvxF5cc6XwTlWt07a6WB47CTBQvbw=
JWT_EXPIRES_IN=24h
BCRYPT_ROUNDS=12

# API Configuration
CORS_ORIGIN=http://localhost:3000
MAX_FILE_SIZE=5242880

# Redis Cache (Optional)
REDIS_URL=redis://localhost:6379
CACHE_TTL=3600

# Twitter Authentication - SECURITY ENHANCED
# Method 1: Encrypted credentials (RECOMMENDED for production)
# Run: npm run encrypt-twitter-creds to create encrypted-twitter-creds.json
TWITTER_MASTER_PASSWORD=your-master-password-here

# Method 2: Environment variables (DEPRECATED - Less secure, development only)
# TWITTER_USERNAME=your_twitter_username  
# TWITTER_PASSWORD=your_twitter_password
# TWITTER_EMAIL=your_twitter_email
# TWITTER_2FA_SECRET=your_2fa_secret_optional

# Scraping Rate Limits
SCRAPING_MAX_REQUESTS_PER_HOUR=300
SCRAPING_DELAY_BETWEEN_REQUESTS=2000
MAX_TWEETS_PER_REQUEST=1000
MAX_USER_TWEETS_PER_REQUEST=500

# Sentiment Analysis
SENTIMENT_CONFIDENCE_THRESHOLD=0.6
SENTIMENT_LANGUAGE_SUPPORT=en,es,fr,pt
ENABLE_EXPERIMENTAL_FEATURES=true

# Development & Debugging
LOG_LEVEL=info
ENABLE_REQUEST_LOGGING=true
ENABLE_SWAGGER_UI=true
ENABLE_HEALTH_CHECKS=true
ENABLE_PERFORMANCE_METRICS=true
RESPONSE_TIME_THRESHOLD=5000

# Feature flags
ENABLE_SCRAPING=false
TRAIN_MODEL_ON_START=false

# Session Store Security
TWITTER_SESSION_TTL_HOURS=24
TWITTER_SESSION_ROTATE_HOURS=12

# Swagger & CORS (harden in production)
# In production, ENABLE_SWAGGER_UI should usually be false (or set auth below)
ENABLE_SWAGGER_UI=false
# Optional basic auth for Swagger UI
SWAGGER_BASIC_AUTH_USER=
SWAGGER_BASIC_AUTH_PASS=
# Comma-separated list of allowed origins (required in production)
# Example: https://app.yourdomain.com,https://admin.yourdomain.com
CORS_ORIGIN=http://localhost:3000
LOG_LEVEL=info
